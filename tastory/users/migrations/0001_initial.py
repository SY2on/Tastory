# Generated by Django 4.0.3 on 2022-07-21 03:17

import django.contrib.auth.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(help_text='필수기입. 10자 이하. 문자, 숫자, @/./+/-/_ 만 가능.', max_length=10, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()])),
                ('nickname', models.CharField(help_text='필수기입. 15자 이하. 문자, 숫자, @/./+/-/_ 만 가능.', max_length=15, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()])),
                ('introduction', models.CharField(blank=True, help_text='100자 이하의 자기소개. 생략 가능합니다.', max_length=100)),
                ('profile_img', models.ImageField(default='default.jpg', null=True, upload_to='profile_pics')),
                ('is_superuser', models.BooleanField(default=False, help_text='사용자의 관리자 사이트의 제한 없는 접근 가능 여부.')),
                ('is_active', models.BooleanField(default=True, help_text='활성화 여부계정삭제 대신 비활성화')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'user',
            },
        ),
    ]
